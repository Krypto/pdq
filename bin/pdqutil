#!/bin/bash

# author pdq  11-11-2012
# PDQ Utility for Archlinux

: ${DIALOG_OK=0}
: ${DIALOG_CANCEL=1}
: ${DIALOG_HELP=2}
: ${DIALOG_EXTRA=3}
: ${DIALOG_ITEM_HELP=4}
: ${DIALOG_ESC=255}

#DIALOGRC=$HOME/.pdqutils/pdq.rc
#DIALOGRC=$HOME/.pdqutils/slackware.rc
#DIALOGRC=$HOME/.pdqutils/debian.rc
#DIALOGRC=$HOME/.pdqutils/sourcemage.rc
#DIALOGRC=$HOME/.pdqutils/suse.rc

# this files name
this_file="$(dirname "$(realpath "$BASH_SOURCE")")"

# dialog text colors
# 0 through 7: black, red, green, yellow, blue, magenta, cyan and white respectively. 
# Bold is set by 'b', reset by 'B'. Underline is set by 'u', reset by 'U'.
# Restore normal settings with "\Zn".
clr="\Zb\Z0"

# video directory
video_playlist=$HOME/Videos/tv/tempvideo

# pacman icon
pac_icon=/home/pdq/.kde4/share/icons/K-Web0/22x22/apps/pacman.png

# temporary file
TEMP=/tmp/answer$$

# formatting
txtbld=$(tput bold)                # Bold
bldred=${txtbld}$(tput setaf 1)    # Red Colored
bldgreen=${txtbld}$(tput setaf 2)  # Green Colored
bldblue=${txtbld}$(tput setaf 6)   # Blue Colored
bldyellow=${txtbld}$(tput setaf 3) # Yellow Colored
txtrst=$(tput sgr0)                # Reset

# default values
MOUNT_DATA=0 ; START_TERM=0 ; START_GUI=0 ; START_DAEMON=0 ; UPDATE_MAIN=0 ; UPDATE_AUR=0

# functions
exiting() {
	clear
	rm -f $TEMP
	exit
}

# source_sh() {
# 	if [ $SHELL = "/bin/zsh"] && [ -f $HOME/.zshrc ]; then
# 		source $HOME/.zshrc
# 	elif [ $SHELL = "/bin/bash"] && [ -f $HOME/.bashrc ]; then
# 		source $HOME/.bashrc
# 	else
# 		echo "FAIL"
# 	fi
# }

what_do() {
	echo -n "${bldblue}Go back to utility menu?${txtrst} ${bldred}y/n:${txtrst} "
	read choice
	if [ $choice = "y" ] ; then
		sh $HOME/$this_file
	else
		exiting
	fi
}

check_pkg_mgr() {
	if [ ! -f /usr/bin/pacaur ]; then
		echo "FATAL ERROR: install pacaur' from the AUR"
		exit
	fi

	if [ ! -f /usr/bin/pacman-color ]; then
		echo "FATAL ERROR: install pacman-color' from the AUR"
		exit
	fi

	echo "${bldyellow}(-’๏_๏’-)(◐ o ◑ )(⊙…⊙ )๏[-ิ_•ิ]๏(•ิ_•ิ)\(•ิ_•ิ\) (/•ิ_•ิ)${txtrst} "
}

load_motd() {
	echo "...loading"
	$HOME/motd.tcl
	what_do
}

main_menu() {
	dialog \
		--colors --title "PDQ Utility" \
		--menu "\ZbSelect action:" 20 60 13 \
		1 $clr"Update packages" \
		2 $clr"Update AUR packages" \
		3 $clr"Update devel packages" \
		4 $clr"Search for a package" \
		5 $clr"Install package" \
		6 $clr"Mount truecrypt data" \
		7 $clr"Terminal applications" \
		8 $clr"GUI applications" \
		9 $clr"Daemons" \
		10 $clr"Load all (4, 5, 6, 7)" \
		11 $clr"Backup files to Github" \
		12 $clr"Message of the Day" \
		13 $clr"Exit" 2>$TEMP

	choice=`cat $TEMP`
	case $choice in
		1) update_pkgs;;
		2) update_aur;;
		3) update_devel;;
		4) search_pkgs;;
		5) install_pkg;;
		6) mount_tcdata;;
		7) term_apps;;
		8) gui_apps;;
		9) ddaemons;;
		10) load_session;;
		11) github_backup;;
		12) load_motd;;
		13) exiting;;
	esac
}

mount_tcdata() {
	dialog --colors --checklist "\ZbYou can use the UP/DOWN arrow keys, the first letter of the choice as a hot key, or the number keys 1-3 to choose an option. Press SPACE to toggle an option on/off." 20 40 3 \
	1 $clr"All" on \
	2 $clr"Mount truecrypt1" off \
	3 $clr"Mount truecrypt2" off 2>$TEMP

	if [ "$?" != "0" ] ; then
		return
	fi

	choice=`cat $TEMP`
	case $choice in
		1) MOUNT_DATA=1;;
		2) MOUNT_DATA=2;;
		3) MOUNT_DATA=3;;
	esac

	# truecrypt mounted success file
	tc1="/media/truecrypt1/test"
	tc2="/media/truecrypt2/test"
	if [ $MOUNT_DATA -eq 1 ] || [ $MOUNT_DATA -eq 2 ] ; then
		if [ -f "$tc1" ] ; then
			echo "${bldblue}[SKIP] It appears your primary data is already mounted, proceeding to secondary data...${txtrst}"
		else
			echo "${bldred}[WAIT] Decrypt primary data and proceed to desktop session${txtrst}"
			truecrypt /home/pdq/vital/hiddenfiles /media/truecrypt1
			if [ -f "$tc1" ] ; then
				echo "${bldgreen}mounted /media/truecrypt1${txtrst}"
				if [ "$(pidof xbindkeys)" ] ; then
					echo "${bldblue}[SKIP] xbindkeys already running, skipping${txtrst}"
				else
					echo "${bldgreen}[OK] Starting xbindkeys (custom keyboard shortcuts)...${txtrst}"
					xbindkeys
				fi
			else
				echo "${bldred}Incorrect passphrase...exiting${txtrst}"
				exit
			fi
		fi
	fi

	if [ $MOUNT_DATA -eq 1 ] || [ $MOUNT_DATA -eq 3 ] ; then
		if [ -f "$tc2" ] ; then
			echo "${bldblue}[SKIP] It appears your secondary data is already mounted, proceeding to desktop session...${txtrst}"
		else
			echo "${bldred}[WAIT] Decrypt secondary data and proceed to desktop session${txtrst}"
			truecrypt /media/HDD2p/pdq/vital/hiddenfiles2 /media/truecrypt2
			if [ -f "$tc2" ] ; then
				echo "${bldgreen}mounted /media/truecrypt2${txtrst}"
			else
				echo "${bldred}Incorrect passphrase...exiting${txtrst}"
				exit
			fi
		fi
	fi

	what_do
}

term_apps() {
	dialog --colors --checklist '\ZbYou can use the UP/DOWN arrow keys, the first letter of the choice as a hot key, or the number keys 1-8 to choose an option. Press SPACE to toggle an option on/off.' 20 40 9 \
	1 $clr"All" on \
	2 $clr"Weechat" off  \
	3 $clr"Htop" off  \
	4 $clr"Saidar" off  \
	5 $clr"TTYload" off  \
	6 $clr"Journalctl" off  \
	7 $clr"Tail stderr" off  \
	8 $clr"ARM" off 2>$TEMP

	if [ "$?" != "0" ] ; then
		return
	fi

	choice=`cat $TEMP`
	case $choice in
		1) START_TERM=1;;
		2) START_TERM=2;;
		3) START_TERM=3;;
		4) START_TERM=4;;
		5) START_TERM=5;;
		6) START_TERM=6;;
		7) START_TERM=7;;
		8) START_TERM=8;;
	esac

	if [ $START_TERM -eq 1 ] || [ $START_TERM -eq 2 ] ; then
		if [ "$(pidof weechat-curses)" ] ; then
			echo "${bldblue}[SKIP] IRC clients already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting IRC clients...${txtrst}"
			urxvtc -e weechat-curses &
			urxvtc -e weechat-curses -d ~/.weechat-priv &
		fi
    fi

	if [ $START_TERM -eq 1 ] || [ $START_TERM -eq 3 ] ; then
		if [ "$(pidof htop)" ] ; then
			echo "${bldblue}[SKIP] htop already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting htop...${txtrst}"
			urxvtc -e htop &
		fi
    fi

	if [ $START_TERM -eq 1 ] || [ $START_TERM -eq 4 ] ; then
		if [ "$(pidof saidar)" ] ; then
			echo "${bldblue}[SKIP] saidar already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting saidar...${txtrst}"
			urxvtc -e saidar &
		fi
    fi

    if [ $START_TERM -eq 1 ] || [ $START_TERM -eq 5 ] ; then
		if [ "$(pidof ttyload)" ] ; then
			echo "${bldblue}[SKIP] ttyload already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting ttyload...${txtrst}"
			urxvtc -e ttyload &
		fi
    fi

    if [ $START_TERM -eq 1 ] || [ $START_TERM -eq 6 ] ; then
		echo "${bldgreen}[OK] Starting journalctl 'tail -f'...${txtrst}"
		urxvtc -name logging -e sudo journalctl -f &
    fi

    if [ $START_TERM -eq 1 ] || [ $START_TERM -eq 7 ] ; then
		echo "${bldgreen}[OK] Starting stderr 'tail -f'...${txtrst}"
		urxvtc -name debug -e tail -f ~/.cache/awesome/stderr &
    fi

    if [ $START_TERM -eq 1 ] || [ $START_TERM -eq 8 ] ; then
		if [ "$(pidof arm)" ] ; then
			echo "${bldblue}[SKIP] arm already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting arm...${txtrst}"
			urxvtc -name arm -e arm &
		fi
    fi
	what_do
}

gui_apps() {
	dialog --colors --checklist "\ZbYou can use the UP/DOWN arrow keys, the first letter of the choice as a hot key, or the number keys 1-6 to choose an option. Press SPACE to toggle an option on/off." 20 40 7 \
	1 $clr"All" on \
	2 $clr"Spacefm" off  \
	3 $clr"VLC" off  \
	4 $clr"Sublime Text" off  \
	5 $clr"Chromium" off  \
	6 $clr"Keepassx" off 2>$TEMP

	if [ "$?" != "0" ] ; then
		return
	fi

	choice=`cat $TEMP`
	case $choice in
		1) START_GUI=1;;
		2) START_GUI=2;;
		3) START_GUI=3;;
		4) START_GUI=4;;
		5) START_GUI=5;;
		6) START_GUI=6;;
	esac

	if [ $START_GUI -eq 1 ] || [ $START_GUI -eq 2 ] ; then
		if [ "$(pidof spacefm)" ] ; then
		echo "${bldblue}[SKIP]File manager already running, skipping${txtrst}"
	else
		echo "${bldgreen}[OK] Starting file manager...${txtrst}"
		spacefm -d > /dev/null 2>&1 & 
	fi

	fi

	if [ $START_GUI -eq 1 ] || [ $START_GUI -eq 3 ] ; then
		if [ "$(pidof vlc)" ] ; then
			echo "${bldblue}[SKIP] Video player already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting video player and playing playlist...${txtrst}"
			#vlc ~/Videos/tv/big\ bang\ theory > /dev/null 2>&1 &
			#vlc -I ncurses --browse-dir ~/Videos/tv/tempvideo
		    vlc $video_playlist > /dev/null 2>&1 &
		fi
	fi

	if [ $START_GUI -eq 1 ] || [ $START_GUI -eq 4 ] ; then
		if [ "$(pidof sublime_text)" ] ; then
			echo "${bldblue}[SKIP] Text editors already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting text editors...${txtrst}"
			subl
			sudo subl
		fi
	fi

	if [ $START_GUI -eq 1 ] || [ $START_GUI -eq 5 ] ; then
		if [ "$(pidof chromium)" ] ; then
			echo "${bldblue}[SKIP] Chromium already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting Chromium...${txtrst}"
			chromium &
		fi
	fi

	if [ $START_GUI -eq 1 ] || [ $START_GUI -eq 6 ] ; then
		if [ "$(pidof keepassx)" ] ; then
			echo "${bldblue}Password manager already running, skipping${txtrst}"
		else
			keepassx &
		fi
	fi

	what_do
}

ddaemons() {
	dialog --colors --checklist "\ZbYou can use the UP/DOWN arrow keys, the first letter of the choice as a hot key, or the number keys 1-9 to choose an option. Press SPACE to toggle an option on/off." 20 40 9 \
	1 $clr"All" on \
	2 $clr"Urxvt" off  \
	3 $clr"Xbindkeys" off  \
	4 $clr"Bitlbee" off  \
	5 $clr"Transmission" off  \
	6 $clr"MOCP" off  \
	7 $clr"Conky" off  \
	8 $clr"LAMP" off \
	9 $clr"Update Notifier" off 2>$TEMP

	if [ "$?" != "0" ] ; then
		return
	fi

	choice=`cat $TEMP`
	case $choice in
		1) START_DAEMON=1;;
		2) START_DAEMON=2;;
		3) START_DAEMON=3;;
		4) START_DAEMON=4;;
		5) START_DAEMON=5;;
		6) START_DAEMON=6;;
		7) START_DAEMON=7;;
		8) START_DAEMON=8;;
		9) START_DAEMON=9;;
	esac

	if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 2 ] ; then
		if [ "$(pidof urxvtd)" ] ; then
			echo "${bldblue}[SKIP] Urxvt daemon already running, restarting${txtrst}"
		else
			echo "${bldgreen}[OK] Starting Urxvt daemon...${txtrst}"
			urxvtd &
		fi
	fi

	if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 3 ] ; then
		if [ "$(pidof xbindkeys)" ] ; then
			echo "${bldblue}[SKIP] xbindkeys already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting xbindkeys (custom keyboard shortcuts)...${txtrst}"
			xbindkeys
		fi
	fi

	if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 4 ] ; then
		if [ "$(pidof bitlbee)" ] ; then
			echo "${bldblue}[SKIP] bitlbee already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting Instant Messaging server...${txtrst}"
			sudo bitlbee -D
		fi
	fi

	if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 5 ] ; then
		if [ "$(pidof transmission-daemon)" ] ; then
			echo "${bldblue}[SKIP]Torrent client already running, skipping${txtrst}"
		else
			echo "${bldgreen}[OK] Starting torrent client...${txtrst}"
			#transmission-qt > /dev/null 2>&1 &
			sudo systemctl start transmission.service
		fi
	fi

	if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 6 ] ; then
		if [ "$(pidof mocp)" ] ; then
			echo "${bldblue}[SKIP] Music server and client already running, restarting${txtrst}"
			killall mocp
			urxvtc -e mocp &
		else
			echo "${bldgreen}[OK] Starting music server and client...${txtrst}"
			urxvtc -e mocp &
		fi
	fi

	# if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 7 ] ; then
	# 	if [ "$(pidof conky)" ] ; then
	# 		killall conky
	# 	else
	# 		sh ~/.config/awesome/global_script.sh > /dev/null 2>&1
	# 	fi
	# fi

	if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 8 ] ; then
		if [ "$(pidof httpd)" ] ; then
			echo "${bldblue}[SKIP] LAMP may already be running, skipping${txtrst}"
			#sudo lamp restart
		else
			echo "${bldgreen}[OK] Starting LAMP server...${txtrst}"
			sudo lamp start
		fi
	fi

	if [ $START_DAEMON -eq 1 ] || [ $START_DAEMON -eq 9 ] ; then
		if [ "$(pidof aarchup)" ] ; then
			echo "${bldblue}[SKIP] Update notifier already running${txtrst}"
		else
			echo "${bldgreen}[OK] Starting update notifier...${txtrst}"
			/usr/bin/aarchup --loop-time 30 --aur --icon pac_icon &
		fi
	fi

	what_do
}

update_pkgs() {
	check_pkg_mgr
	#zsh $HOME/bin/pacupdater
	echo ":: Updating system..."
	echo "sudo pacman-color -Syu"
	sudo pacman-color -Syu
	echo " "
	echo ":: Update complete..."
	echo " "
	notify-send "pacman" \
            "Update complete" \
            -i pac_icon

	what_do
}

update_aur() {
	check_pkg_mgr
	#zsh $HOME/bin/packerupdater
	echo ":: Updating system..."
	echo "pacaur -Syua"
	#packer-color -Syu --auronly
	pacaur -Syua
	echo " "
	echo ":: Update complete..."
	echo " "
	notify-send "pacaur" \
            "Update complete" \
            -i pac_icon

	what_do
}

update_devel() {
	check_pkg_mgr
	#zsh $HOME/bin/packerupdater
	echo ":: Updating system..."
	echo "pacaur -Syua --devel"
	#packer-color -Syu --auronly
	pacaur -Syua --devel
	echo " "
	echo ":: Update complete..."
	echo " "
	notify-send "pacaur" \
            "Update complete" \
            -i pac_icon

	what_do
}

search_pkgs() {
	check_pkg_mgr
	echo -n "${bldblue}Search for package:${txtrst} "
	read choice
	if [ -z $choice ] ; then
		echo "nothing found"
	else                   
		pacaur -Ss $choice
	fi

	what_do
}

install_pkg() {
	check_pkg_mgr
	echo -n "${bldblue}Install package:${txtrst} "
	read choice
	if [ -z $choice ] ; then
		echo "nothing found"
	else                   
		pacaur -S $choice
	fi

	what_do
}

github_backup() {
	dialog --title "Commit message" --clear "$@" \
        --inputbox "Enter message below:" 16 51 2>$TEMP

	retval=$?
	COMMIT_MSG=""
	case $retval in
	  $DIALOG_OK)
	    COMMIT_MSG=`cat $TEMP`;;
	  $DIALOG_CANCEL)
	    echo "Cancel pressed.";;
	  $DIALOG_HELP)
	    echo "Help pressed.";;
	  $DIALOG_EXTRA)
	    echo "Extra button pressed.";;
	  $DIALOG_ITEM_HELP)
	    echo "Item-help button pressed.";;
	  $DIALOG_ESC)
	    if test -s $TEMP ; then
	      cat $tempfile
	    else
	      echo "ESC pressed."
	    fi
	    ;;
	esac
	sh ~/github/pdq/backup.sh "$COMMIT_MSG"
	what_do
}

# execution
while true
do
	main_menu
done
